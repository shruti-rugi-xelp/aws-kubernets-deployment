version: 2
jobs:
  test:
    docker:
      - image: circleci/node:10
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run:
          name: Install dependencies
          command: npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Run tests
          command: npm test
deploy:
    docker:
      - image: circleci/python:3.6.1
    environment:
        AWS_DEFAULT_OUTPUT: json
      - run:
          name: Install awscli
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Setup common environment variables
          command: |
            echo 'export ECR_REPOSITORY_NAME="${AWS_RESOURCE_NAME_PREFIX}"' >> $BASH_ENV
            echo 'export ECS_CLUSTER_NAME="${AWS_RESOURCE_NAME_PREFIX}-cluster"' >> $BASH_ENV
            echo 'export ECS_SERVICE_NAME="${AWS_RESOURCE_NAME_PREFIX}-service"' >> $BASH_ENV      
      - run:
          name: Push image
          command: |
          docker build -t ${FULL_IMAGE_NAME}/$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPOSITORY_NAME:$CIRCLE_SHA1 .
             . venv/bin/activate
            eval $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
            docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPOSITORY_NAME:$CIRCLE_SHA1

      # - run:
      #     name: Deploy to Kubernetes
      #     command: |
      #       envsubst < ${HOME}/project/k8s.yml > ${HOME}/patched_k8s.yml
      #       kubectl apply -f ${HOME}/patched_k8s.yml
      #       kubectl rollout status deployment/${PROJECT_NAME}
workflows:
  version: 2
  build_test_deploy:
    jobs:
      - build_and_test
      - deploy_to_staging:
          requires:
            - build_and_test
          filters:
            branches:
              only: master
